@page "/BookingPage"
@using System.Text.RegularExpressions;
@using sentinelapi.Domain.Entities;
<h3>BookingPage</h3>



<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Locker Id" Required="true" RequiredError="Locker Id is required!" />

                <MudTextField T="string" Label="Firstname" Required="true" RequiredError="FirstName is required!" />
                <MudTextField T="string" Label="Last Name" Required="true" RequiredError="LastName is required!" />
                <MudTextField T="DateTime?" Format="yyyy-MM-dd" Label="Start Date" InputType="InputType.Date" />
                <MudTextField T="string" Label="Start Time" InputType="InputType.Time" />

                <MudTextField T="DateTime?" Format="yyyy-MM-dd" Label="End Date" InputType="InputType.Date" />
                <MudTextField T="string" Label="End Time" InputType="InputType.Time" />

              

                <MudTextField T="string" Label="Notes" Lines="3" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Api" />
                <MudSelect Dense="true" T="string" Label="Phrase Selection" Placeholder="Please select a secret phrase" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("What school did you go to ?")" />
                    <MudSelectItem Value="@("What street did you grow up on?")" />
                    <MudSelectItem Value="@("What car did you first drive?")" />
                    <MudSelectItem Value="@("What is fathers surname")" />
                 </MudSelect>

                <MudTextField T="string" Label="Phrase Response" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Api" />

                <div class="d-flex align-center justify-space-between">
                    <MudCheckBox T="bool" Required="true" RequiredError="You must agree" Label="I agree!" />
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Register</MudButton>
                </div>
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">Validate</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.Reset())" Class="mx-2">Reset</MudButton>
            <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4 mud-height-full">
            <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
                @foreach (var error in errors)
            {
                <MudText Color="@Color.Error">@error</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }
    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }
}
